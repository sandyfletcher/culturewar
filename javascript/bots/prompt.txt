Your task is to design a high-performance AI bot for a real-time strategy game mimicking Galcon that will compete against and outperform other AI opponents.
The Game's objective is to eliminate all opponents by conquering their planets. You send fleets of "troops" from your planets to attack enemies or reinforce allies. Planets you own generate new troops over time based on their size. The game ends when only one player remains, or to the player controlling the most planets when the timer runs out.
Your SDK (The Tools at Your Disposal):
root/javascript/bots/BaseBot.js: Your bot must extend this class. It provides this.api for all game interactions and this.memory for persistent state.
root/javascript/GameAPI.js: Your "senses." This is a rich API with powerful helper functions you can use to build sophisticated logic.
root/javascript/config.js: Contains the physical laws of the game (troop speed, planet production rates, etc.), critical for accurate calculations.
root/javascript/Planet.js & root/javascript/TroopMovement.js: The structure of the game objects returned by the API.
Key Strategic Challenges to Consider:
Players make decisions one at a time, and are given a quarter-second to send their makeDecision.  This means you'll make moves every 1.25 seconds at the absolute most, and every 0.25 seconds if you're one of the final two contenders of a battle.
A successful bot doesn't act randomly, it follows a prioritized logic loop on every turn. To perform well against a variety of unknown opponents, your bot should be robust, adaptive, and its strategic decisions should be well-reasoned.
You have complete creative freedom to determine the bot's core strategy, but consider using state management to develop long-term plans to vary your behaviour in different game phases, evaluate target priority and threat assessment, weigh risk against reward, and adapt based on whether you're winning or losing.
Your Task:
Based on your chosen strategy and the provided SDK, please write the complete code for the new bot. The code must extend BaseBot and be fully self-contained in a single file named [YourModelName].js . Please add comments to your code explaining the high-level strategic choices you've made.